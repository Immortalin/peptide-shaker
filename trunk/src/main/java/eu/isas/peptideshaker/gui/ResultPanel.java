
package eu.isas.peptideshaker.gui;

import com.compomics.util.experiment.MsExperiment;
import com.compomics.util.experiment.biology.Sample;
import eu.isas.peptideshaker.PeptideShaker;
import eu.isas.peptideshaker.export.CsvExporter;
import eu.isas.peptideshaker.fdrestimation.PeptideSpecificMap;
import eu.isas.peptideshaker.fdrestimation.SpectrumSpecificMap;
import eu.isas.peptideshaker.fdrestimation.TargetDecoyMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Note: This class is no longer used!
 *
 * @author  Marc Vaudel
 * @author  Harald Barsnes
 */
public class ResultPanel extends javax.swing.JPanel {

    private PeptideShaker parent;
    private MsExperiment msExperiment;
    private Sample sample;
    private int replicateNumber;
    private SpectrumSpecificMap spectrumMap;
    private PeptideSpecificMap peptideMap;
    private TargetDecoyMap proteinMap;

    /** Creates new form ResultPanel */
    public ResultPanel(PeptideShaker parent, MsExperiment msExperiment, Sample sample, int replicateNumber, TargetDecoyMap proteinMap, PeptideSpecificMap peptideMap, SpectrumSpecificMap spectrumMap) {

        this.parent = parent;
        this.msExperiment = msExperiment;
        this.sample = sample;
        this.replicateNumber = replicateNumber;
        this.proteinMap = proteinMap;
        this.peptideMap = peptideMap;
        this.spectrumMap = spectrumMap;

        initComponents();

        if (validateInput()) {
            getDatasetMetrics(getThreshold());
        }
        replicateNumLbl.setText(replicateNumber + "");
        sampleNameLbl.setText(sample.getReference());
        experimentNameLbl.setText(msExperiment.getReference());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        experimentNameLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sampleNameLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        replicateNumLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        thresholdTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("Identification results from");

        experimentNameLbl.setText("Experiment name");

        jLabel3.setText("sample");

        sampleNameLbl.setText("sample name");

        jLabel5.setText("replicate");

        replicateNumLbl.setText("replicate #");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Identification Resutls"));

        resultTable.setModel(new ResultTable());
        jScrollPane1.setViewportView(resultTable);

        jLabel7.setText("FDR Threshold:");

        thresholdTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        thresholdTxt.setText("1");
        thresholdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdTxtActionPerformed(evt);
            }
        });

        jLabel8.setText("%");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thresholdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(thresholdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                .addContainerGap())
        );

        exitButton.setText("Exit");

        saveButton.setText("Save");

        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(experimentNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sampleNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replicateNumLbl))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(exportButton, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {exitButton, exportButton, saveButton});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(experimentNameLbl)
                    .addComponent(jLabel3)
                    .addComponent(sampleNameLbl)
                    .addComponent(jLabel5)
                    .addComponent(replicateNumLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(saveButton)
                    .addComponent(exportButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void thresholdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdTxtActionPerformed
        if (validateInput()) {
            getDatasetMetrics(getThreshold());
        }
    }//GEN-LAST:event_thresholdTxtActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        CsvExporter exporter = new CsvExporter(msExperiment, sample, replicateNumber);
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select Result Folder");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setMultiSelectionEnabled(false);

        int returnVal = fileChooser.showDialog(this, "Save");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            exporter.exportResults(fileChooser.getSelectedFile());
        }
    }//GEN-LAST:event_exportButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel experimentNameLbl;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel replicateNumLbl;
    private javax.swing.JTable resultTable;
    private javax.swing.JLabel sampleNameLbl;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField thresholdTxt;
    // End of variables declaration//GEN-END:variables

    private boolean validateInput() {
        try {
            Double test = new Double(thresholdTxt.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please verify the input for the desired threshold value.",
                    "Input Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    public double getThreshold() {
        Double percent = new Double(thresholdTxt.getText().trim());
        return percent * 0.01;
    }

    public void getDatasetMetrics(double threshold) {
        spectrumMap.getResults(threshold);
        peptideMap.getResults(threshold);
        proteinMap.getResults(threshold);
        resultTable.repaint();
    }

    // Private class
    private class ResultTable extends DefaultTableModel {

        @Override
        public int getRowCount() {
            return 3;
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "Level";
                case 1:
                    return "Number of Hits";
                case 2:
                    return "FDR";
                case 3:
                    return "FNR";
                default:
                    return "";
            }
        }

        @Override
        public Object getValueAt(int row, int column) {
            switch (column) {
                case 0:
                    switch (row) {
                        case 0:
                            return "Protein";
                        case 1:
                            return "Peptide";
                        case 2:
                            return "Spectrum";
                        default:
                            return "";
                    }
                case 1:
                    switch (row) {
                        case 0:
                            return proteinMap.getNHits();
                        case 1:
                            return peptideMap.getNHits();
                        case 2:
                            return spectrumMap.getNHits();
                        default:
                            return Double.NaN;
                    }
                case 2:
                    switch (row) {
                        case 0:
                            return proteinMap.getFdr() * 100;
                        case 1:
                            return peptideMap.getFdr() * 100;
                        case 2:
                            return spectrumMap.getFdr() * 100;
                        default:
                            return Double.NaN;
                    }
                case 3:
                    switch (row) {
                        case 0:
                            return proteinMap.getFnr() * 100;
                        case 1:
                            return peptideMap.getFnr() * 100;
                        case 2:
                            return spectrumMap.getFnr() * 100;
                        default:
                            return Double.NaN;
                    }
                default:
                    return "";
            }
        }

        @Override
        public void setValueAt(Object aValue, int row, int column) {
        }

        @Override
        public Class getColumnClass(int columnIndex) {
            return getValueAt(0, columnIndex).getClass();
        }
    }
}
