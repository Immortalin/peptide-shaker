package eu.isas.peptideshaker.gui.preferencesdialogs;

import eu.isas.peptideshaker.gui.PeptideShakerGUI;
import eu.isas.peptideshaker.preferences.AnnotationPreferences;
import javax.swing.JOptionPane;

/**
 * A simple dialog for setting the spectrum annotation preferences.
 * 
 * @author Marc Vaudel
 * @author Harald Barsnes
 */
public class AnnotationPreferencesDialog extends javax.swing.JDialog {

    /**
     * The annotation preferences.
     */
    private AnnotationPreferences annotationPreferences;
    /**
     * The PeptideShakerGUI parent.
     */
    private PeptideShakerGUI peptideShakerGUI;

    /** 
     * Creates a new AnnotationPreferencesDialog.
     * 
     * @param peptideShakerGUI the PeptideShaker GUI parent
     */
    public AnnotationPreferencesDialog(PeptideShakerGUI peptideShakerGUI) {
        super(peptideShakerGUI, true);
        this.peptideShakerGUI = peptideShakerGUI;
        this.annotationPreferences = peptideShakerGUI.getAnnotationPreferences();
        initComponents();
        refreshSelection();
        this.setLocationRelativeTo(peptideShakerGUI);
        mzToleranceTxt.setText(peptideShakerGUI.getSearchParameters().getFragmentIonMZTolerance() + "");
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mzToleranceTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mostIntenseJCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Spectrum Annotation");
        setResizable(false);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Preferences"));

        jLabel2.setText("m/z Accuracy:");

        mzToleranceTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mzToleranceTxt.setText("0.5");

        jLabel3.setText("Da");

        mostIntenseJCheckBox.setText("Annotate Most Intense Peaks");
        mostIntenseJCheckBox.setIconTextGap(15);
        mostIntenseJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostIntenseJCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mostIntenseJCheckBox)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(mzToleranceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(mzToleranceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(mostIntenseJCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Close the dialog and update the spectrum annotations.
     * 
     * @param evt 
     */
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (validateInput()) {
            peptideShakerGUI.getSearchParameters().setFragmentIonMZTolerance(new Double(mzToleranceTxt.getText()));
            peptideShakerGUI.setAnnotationPreferences(annotationPreferences);
            peptideShakerGUI.getOverviewPanel().updateSpectrumAnnotation();
            peptideShakerGUI.getPtmPanel().updateSpectra();
            peptideShakerGUI.getSpectrumIdentificationPanel().updateSpectrum();
            dispose();
        }
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * Closes the dialog without saving.
     * 
     * @param evt 
     */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Updates the annotation preferences.
     * 
     * @param evt 
     */
    private void mostIntenseJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostIntenseJCheckBoxActionPerformed
        annotationPreferences.annotateMostIntensePeaks(mostIntenseJCheckBox.isSelected());
        refreshSelection();
    }//GEN-LAST:event_mostIntenseJCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox mostIntenseJCheckBox;
    private javax.swing.JTextField mzToleranceTxt;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Refresh the selection,
     */
    private void refreshSelection() {
        mostIntenseJCheckBox.setSelected(annotationPreferences.shallAnnotateMostIntensePeaks());
    }

    /**
     * Validate the annotation accuracy.
     * 
     * @return true if validated
     */
    private boolean validateInput() {
        try {
            new Double(mzToleranceTxt.getText().trim());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please verify the input for max mass deviation.",
                    "Input Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
}
