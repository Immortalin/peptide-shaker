package eu.isas.peptideshaker.gui.tabpanels;

import com.compomics.util.experiment.biology.Protein;
import com.compomics.util.experiment.identification.SequenceFactory;
import com.compomics.util.gui.dialogs.ProgressDialogParent;
import com.compomics.util.gui.dialogs.ProgressDialogX;
import com.compomics.util.protein.Header.DatabaseType;
import eu.isas.peptideshaker.gui.PeptideShakerGUI;
import eu.isas.peptideshaker.utils.BareBonesBrowserLaunch;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import uk.ac.ebi.kraken.interfaces.uniprot.UniProtEntry;
import uk.ac.ebi.kraken.interfaces.uniprot.description.FieldType;
import uk.ac.ebi.kraken.interfaces.uniprot.description.Name;
import uk.ac.ebi.kraken.uuw.services.remoting.EntryIterator;
import uk.ac.ebi.kraken.uuw.services.remoting.Query;
import uk.ac.ebi.kraken.uuw.services.remoting.RemoteDataAccessException;
import uk.ac.ebi.kraken.uuw.services.remoting.UniProtJAPI;
import uk.ac.ebi.kraken.uuw.services.remoting.UniProtQueryBuilder;
import uk.ac.ebi.kraken.uuw.services.remoting.UniProtQueryService;

/**
 * This tab contains the basic protein annotation and links to other 
 * protein resources.
 * 
 * @author Harald Barsnes
 */
public class AnnotationPanel extends javax.swing.JPanel implements ProgressDialogParent {

    /**
     * The current protein accession number.
     */
    private String currentAccessionNumber = "";
    /**
     * A progress dialog.
     */
    private ProgressDialogX progressDialog;
    /**
     * The PeptideShakerGUI parent.
     */
    private PeptideShakerGUI peptideShakerGUI;
    /**
     * The sequence factory
     */
    private SequenceFactory sequenceFactory = SequenceFactory.getInstance();

    /** 
     * Creates a new AnnotationPanel.
     * 
     * @param peptideShakerGUI
     */
    public AnnotationPanel(PeptideShakerGUI peptideShakerGUI) {
        initComponents();
        this.peptideShakerGUI = peptideShakerGUI;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        annotationLinksJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        accessionNumberJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        proteinNameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        geneNameJTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        taxonomyJTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        databaseJTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        altProteinNameJTextField = new javax.swing.JTextField();
        annotationLinksJPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        loadUniProtJButton = new javax.swing.JButton();
        annotationLinksJPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        loadDastyJButton = new javax.swing.JButton();
        annotationLinksJPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        loadReactomeJButton = new javax.swing.JButton();
        annotationLinksJPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        loadStringJButton = new javax.swing.JButton();
        annotationLinksJPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        loadDavidJButton = new javax.swing.JButton();
        annotationLinksJPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        loadIntActJButton = new javax.swing.JButton();
        annotationLinksJPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        loadQuickGOJButton = new javax.swing.JButton();
        annotationLinksJPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        loadInterProJButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        annotationLinksJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Basic Protein Annotation"));
        annotationLinksJPanel.setOpaque(false);

        jLabel1.setText("Accession Number:");

        accessionNumberJTextField.setEditable(false);
        accessionNumberJTextField.setText("P02768");

        jLabel3.setText("Protein Name:");

        proteinNameJTextField.setEditable(false);

        jLabel4.setText("Gene Name:");

        geneNameJTextField.setEditable(false);

        jLabel8.setText("Taxonomy:");

        taxonomyJTextField.setEditable(false);

        jLabel16.setText("Database:");

        databaseJTextField.setEditable(false);

        jLabel6.setText("Alt. Names:");

        altProteinNameJTextField.setEditable(false);

        javax.swing.GroupLayout annotationLinksJPanelLayout = new javax.swing.GroupLayout(annotationLinksJPanel);
        annotationLinksJPanel.setLayout(annotationLinksJPanelLayout);
        annotationLinksJPanelLayout.setHorizontalGroup(
            annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel16))
                .addGap(38, 38, 38)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(databaseJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(taxonomyJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(geneNameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(altProteinNameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(proteinNameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(accessionNumberJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
                .addContainerGap())
        );

        annotationLinksJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel6, jLabel8});

        annotationLinksJPanelLayout.setVerticalGroup(
            annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proteinNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(altProteinNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(geneNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taxonomyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(annotationLinksJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(databaseJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        annotationLinksJPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("UniProt - protein knowledgebase"));
        annotationLinksJPanel1.setOpaque(false);

        jLabel5.setText("High-quality protein sequence and functional information.");

        loadUniProtJButton.setText("Search UniProt");
        loadUniProtJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadUniProtJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel1Layout = new javax.swing.GroupLayout(annotationLinksJPanel1);
        annotationLinksJPanel1.setLayout(annotationLinksJPanel1Layout);
        annotationLinksJPanel1Layout.setHorizontalGroup(
            annotationLinksJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadUniProtJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addContainerGap(176, Short.MAX_VALUE))
        );
        annotationLinksJPanel1Layout.setVerticalGroup(
            annotationLinksJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadUniProtJButton)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dasty 3 - protein sequence features"));
        annotationLinksJPanel2.setOpaque(false);

        jLabel7.setText("Web client for visualizing protein sequence feature information.");

        loadDastyJButton.setText("Search Dasty 3");
        loadDastyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDastyJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel2Layout = new javax.swing.GroupLayout(annotationLinksJPanel2);
        annotationLinksJPanel2.setLayout(annotationLinksJPanel2Layout);
        annotationLinksJPanel2Layout.setHorizontalGroup(
            annotationLinksJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadDastyJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addContainerGap(133, Short.MAX_VALUE))
        );
        annotationLinksJPanel2Layout.setVerticalGroup(
            annotationLinksJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(loadDastyJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Reactome - pathway database"));
        annotationLinksJPanel3.setOpaque(false);

        jLabel9.setText("Manually curated and peer-reviewed pathway database.");

        loadReactomeJButton.setText("Search Reactome");
        loadReactomeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadReactomeJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel3Layout = new javax.swing.GroupLayout(annotationLinksJPanel3);
        annotationLinksJPanel3.setLayout(annotationLinksJPanel3Layout);
        annotationLinksJPanel3Layout.setHorizontalGroup(
            annotationLinksJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadReactomeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        annotationLinksJPanel3Layout.setVerticalGroup(
            annotationLinksJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(loadReactomeJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("STRING - protein interaction"));
        annotationLinksJPanel4.setOpaque(false);

        jLabel10.setText("Known and Predicted Protein-Protein Interactions.");

        loadStringJButton.setText("Search STRING");
        loadStringJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStringJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel4Layout = new javax.swing.GroupLayout(annotationLinksJPanel4);
        annotationLinksJPanel4.setLayout(annotationLinksJPanel4Layout);
        annotationLinksJPanel4Layout.setHorizontalGroup(
            annotationLinksJPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadStringJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addContainerGap(210, Short.MAX_VALUE))
        );
        annotationLinksJPanel4Layout.setVerticalGroup(
            annotationLinksJPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(loadStringJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("DAVID - functional annotation"));
        annotationLinksJPanel5.setOpaque(false);

        jLabel11.setText("Database for Annotation, Visualization and Integrated Discovery.");

        loadDavidJButton.setText("Search DAVID");
        loadDavidJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDavidJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel5Layout = new javax.swing.GroupLayout(annotationLinksJPanel5);
        annotationLinksJPanel5.setLayout(annotationLinksJPanel5Layout);
        annotationLinksJPanel5Layout.setHorizontalGroup(
            annotationLinksJPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadDavidJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addContainerGap(123, Short.MAX_VALUE))
        );
        annotationLinksJPanel5Layout.setVerticalGroup(
            annotationLinksJPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(loadDavidJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("IntAct - protein interaction"));
        annotationLinksJPanel6.setOpaque(false);

        jLabel12.setText("Analysis tools for protein interaction data.");

        loadIntActJButton.setText("Search IntAct");
        loadIntActJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadIntActJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel6Layout = new javax.swing.GroupLayout(annotationLinksJPanel6);
        annotationLinksJPanel6.setLayout(annotationLinksJPanel6Layout);
        annotationLinksJPanel6Layout.setHorizontalGroup(
            annotationLinksJPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadIntActJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addContainerGap(235, Short.MAX_VALUE))
        );
        annotationLinksJPanel6Layout.setVerticalGroup(
            annotationLinksJPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(loadIntActJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("QuickGO - gene ontology terms and annotations"));
        annotationLinksJPanel7.setOpaque(false);

        jLabel13.setText("Web-based browser for Gene Ontology terms.");

        loadQuickGOJButton.setText("Search QuickGO");
        loadQuickGOJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadQuickGOJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel7Layout = new javax.swing.GroupLayout(annotationLinksJPanel7);
        annotationLinksJPanel7.setLayout(annotationLinksJPanel7Layout);
        annotationLinksJPanel7Layout.setHorizontalGroup(
            annotationLinksJPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadQuickGOJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addContainerGap(228, Short.MAX_VALUE))
        );
        annotationLinksJPanel7Layout.setVerticalGroup(
            annotationLinksJPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(loadQuickGOJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        annotationLinksJPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("InterPro - predictive protein signatures"));
        annotationLinksJPanel8.setOpaque(false);

        jLabel14.setText("Integrated database of predictive protein signatures.");

        loadInterProJButton.setText("Search InterPro");
        loadInterProJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadInterProJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annotationLinksJPanel8Layout = new javax.swing.GroupLayout(annotationLinksJPanel8);
        annotationLinksJPanel8.setLayout(annotationLinksJPanel8Layout);
        annotationLinksJPanel8Layout.setHorizontalGroup(
            annotationLinksJPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadInterProJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addContainerGap(180, Short.MAX_VALUE))
        );
        annotationLinksJPanel8Layout.setVerticalGroup(
            annotationLinksJPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(annotationLinksJPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(annotationLinksJPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(loadInterProJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein Annotation - Help"));
        jPanel1.setOpaque(false);

        jLabel2.setText("<html>\nThere are numerous sources of protein information, each covering different aspects of protein properties.\nSome of the most common resources are listed below.\n<br><br>\nTo access the annotations of your protein simply click the button corresponding to the wanted resource.\n<br><br>\nSome resources also allow you to search with a set of proteins. To get the list of all proteins in your project,\ngo to the Export menu and select Features > Protein Accession Numbers. This will provide you with the\nlist of accession numbers that you can copy and paste into any tool. \n<br><br>\nTo querry a resource using multiple proteins, open the wanted resource in your web browser and follow the\nresource's instructions for how to perform the search.\n</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(annotationLinksJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(annotationLinksJPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(annotationLinksJPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(annotationLinksJPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(annotationLinksJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(annotationLinksJPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(annotationLinksJPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(annotationLinksJPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(annotationLinksJPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(annotationLinksJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(annotationLinksJPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(annotationLinksJPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annotationLinksJPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annotationLinksJPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(annotationLinksJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(annotationLinksJPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annotationLinksJPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annotationLinksJPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Open the protein accession in Dasty3.
     * 
     * @param evt 
     */
    private void loadDastyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDastyJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.ebi.ac.uk/dasty/client/index.html?q=" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadDastyJButtonActionPerformed

    /**
     * Open the protein accession in UniProt.
     * 
     * @param evt 
     */
    private void loadUniProtJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadUniProtJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.uniprot.org/uniprot/" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadUniProtJButtonActionPerformed

    /**
     * Open the protein accession in Reactome.
     * 
     * @param evt 
     */
    private void loadReactomeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadReactomeJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.reactome.org/cgi-bin/link?SOURCE=UNIPROT&ID=" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadReactomeJButtonActionPerformed

    /**
     * Open the protein accession in STRING.
     * 
     * @param evt 
     */
    private void loadStringJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStringJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://string-db.org/newstring_cgi/show_input_page.pl?identifier=" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadStringJButtonActionPerformed

    /**
     * Open the protein accession in DAVID.
     * 
     * @param evt 
     */
    private void loadDavidJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDavidJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://david.abcc.ncifcrf.gov/api.jsp?type=UNIPROT_ACCESSION&ids=" + accessionNumberJTextField.getText() + "&tool=summary");
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadDavidJButtonActionPerformed

    /**
     * Open the protein accession in IntAct.
     * 
     * @param evt 
     */
    private void loadIntActJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadIntActJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.ebi.ac.uk/intact/pages/interactions/interactions.xhtml?query=" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadIntActJButtonActionPerformed

    /**
     * Open the protein accession in QuickGO.
     * 
     * @param evt 
     */
    private void loadQuickGOJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadQuickGOJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.ebi.ac.uk/QuickGO/GSearch?q=" + accessionNumberJTextField.getText() + "&what=Protein");
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadQuickGOJButtonActionPerformed

    /**
     * Open the protein accession in InterPro.
     * 
     * @param evt 
     */
    private void loadInterProJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadInterProJButtonActionPerformed
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.ebi.ac.uk/interpro/ISearch?query=" + accessionNumberJTextField.getText());
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_loadInterProJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accessionNumberJTextField;
    private javax.swing.JTextField altProteinNameJTextField;
    private javax.swing.JPanel annotationLinksJPanel;
    private javax.swing.JPanel annotationLinksJPanel1;
    private javax.swing.JPanel annotationLinksJPanel2;
    private javax.swing.JPanel annotationLinksJPanel3;
    private javax.swing.JPanel annotationLinksJPanel4;
    private javax.swing.JPanel annotationLinksJPanel5;
    private javax.swing.JPanel annotationLinksJPanel6;
    private javax.swing.JPanel annotationLinksJPanel7;
    private javax.swing.JPanel annotationLinksJPanel8;
    private javax.swing.JTextField databaseJTextField;
    private javax.swing.JTextField geneNameJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loadDastyJButton;
    private javax.swing.JButton loadDavidJButton;
    private javax.swing.JButton loadIntActJButton;
    private javax.swing.JButton loadInterProJButton;
    private javax.swing.JButton loadQuickGOJButton;
    private javax.swing.JButton loadReactomeJButton;
    private javax.swing.JButton loadStringJButton;
    private javax.swing.JButton loadUniProtJButton;
    private javax.swing.JTextField proteinNameJTextField;
    private javax.swing.JTextField taxonomyJTextField;
    // End of variables declaration//GEN-END:variables

    /**
     * Updates the basic protein annotation information.
     * 
     * @param aAccessionNumber the new accession number
     */
    public void updateBasicProteinAnnotation(String aAccessionNumber) {

        // only update if new accession number
        if (aAccessionNumber != null && !currentAccessionNumber.equalsIgnoreCase(aAccessionNumber)) {

            currentAccessionNumber = aAccessionNumber;
            accessionNumberJTextField.setText(currentAccessionNumber);
            
            progressDialog = new ProgressDialogX(peptideShakerGUI, this, true);

            new Thread(new Runnable() {

                public void run() {
                    progressDialog.setTitle("Loading Basic Protein Annotation. Please Wait...");
                    progressDialog.setIndeterminate(true);
                    progressDialog.setVisible(true);
                }
            }, "ProgressDialog").start();

            new Thread("BasicProteinDetailsThread") {

                @Override
                public void run() {

                    try {
                        Protein currentProtein = sequenceFactory.getProtein(currentAccessionNumber);
                        DatabaseType databaseType = currentProtein.getDatabaseType();

                        databaseJTextField.setText(databaseType.toString());

                        if (databaseType == DatabaseType.UniProt) {

                            UniProtQueryService queryService = UniProtJAPI.factory.getUniProtQueryService();
                            ArrayList<String> accessionNumbers = new ArrayList<String>();
                            accessionNumbers.add(currentAccessionNumber);

                            Query proteinQuery = UniProtQueryBuilder.buildIDListQuery(accessionNumbers);
                            EntryIterator<UniProtEntry> entries = queryService.getEntryIterator(proteinQuery);

                            Iterator<UniProtEntry> iterator = entries.iterator();

                            int counter = 0;

                            if (iterator.hasNext()) {

                                UniProtEntry uniProtEntry = iterator.next();

                                if (uniProtEntry.getProteinDescription().getRecommendedName().getFieldsByType(FieldType.FULL).size() > 0) {
                                    proteinNameJTextField.setText(uniProtEntry.getProteinDescription().getRecommendedName().getFieldsByType(FieldType.FULL).get(0).getValue());
                                } else {
                                    proteinNameJTextField.setText("(not available)");
                                }
                                
                                List<Name> altNames = uniProtEntry.getProteinDescription().getAlternativeNames();
                                
                                String altNamesAsString = "";
                                String altProteinNamesTooltip = "<html>";
                                
                                for (int i=0; i<altNames.size(); i++) { 
                                    if (altNames.get(i).getFieldsByType(FieldType.FULL).size() > 0) {
                                        altNamesAsString += altNames.get(i).getFieldsByType(FieldType.FULL).get(0).getValue().toString() + ", ";
                                        altProteinNamesTooltip += altNames.get(i).getFieldsByType(FieldType.FULL).get(0).getValue().toString() + "<br>";
                                    }    
                                }
                                
                                if (altNamesAsString.endsWith(", ")) {
                                    altNamesAsString = altNamesAsString.substring(0, altNamesAsString.length() - 2);
                                }
                                
                                if (altNamesAsString.length() > 0) {
                                    altProteinNamesTooltip += "</html>";
                                    altProteinNameJTextField.setToolTipText(altProteinNamesTooltip);
                                    altProteinNameJTextField.setText(altNamesAsString);
                                } else {
                                    altProteinNameJTextField.setToolTipText(null);
                                    altProteinNameJTextField.setText("(not available)");
                                }
                                
                                geneNameJTextField.setText(uniProtEntry.getGenes().get(0).getGeneName().toString());

                                if (uniProtEntry.getOrganism().hasCommonName()) {
                                    taxonomyJTextField.setText(uniProtEntry.getOrganism().getCommonName().toString());
                                } else {
                                    taxonomyJTextField.setText(uniProtEntry.getOrganism().getScientificName().toString());
                                }

                                counter++;
                            }

                            if (iterator.hasNext()) {
                                counter++;
                            }

                            if (counter > 1) {
                                JOptionPane.showMessageDialog(peptideShakerGUI, "UniProt Error", "The accession number resulted in more than 1 hit!", JOptionPane.WARNING_MESSAGE);
                            } else if (counter == 0) {
                                JOptionPane.showMessageDialog(peptideShakerGUI, "UniProt Error", "The accession number resulted in 0 hits!", JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            proteinNameJTextField.setText("Unknown");
                            geneNameJTextField.setText("Unknown");
                            taxonomyJTextField.setText("Unknown");
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    } catch (RemoteDataAccessException e) {
                        e.printStackTrace();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    progressDialog.setVisible(false);
                    progressDialog.dispose();
                }
            }.start();
        }
    }

    @Override
    public void cancelProgress() {
        // do nothing??
        // @TODO: is this correct??
    }
}
