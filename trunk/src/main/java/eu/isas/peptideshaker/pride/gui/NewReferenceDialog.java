package eu.isas.peptideshaker.pride.gui;

import eu.isas.peptideshaker.pride.Reference;

/**
 * A dialog for adding new references or editing old ones.
 * 
 * @author Harald Barsnes
 */
public class NewReferenceDialog extends javax.swing.JDialog {

    /**
     * Reference to the main gui.
     */
    private PrideExportDialog prideExportDialog;
    /**
     * The row index of the references being edited.
     */
    private int rowIndex = -1 ;

    /**
     * Creates a new NewReferenceDialog dialog.
     *
     * @param prideExportDialog
     * @param modal
     */
    public NewReferenceDialog(PrideExportDialog prideExportDialog, boolean modal) {
        super(prideExportDialog, modal);
        this.prideExportDialog = prideExportDialog;
        initComponents();
        setTitle("New Reference");
        setLocationRelativeTo(prideExportDialog);
        setVisible(true);
    }

    /**
     * Creates a new NewReferenceDialog dialog.
     *
     * @param prideExportDialog
     * @param modal
     * @param reference
     * @param rowIndex  
     */
    public NewReferenceDialog(PrideExportDialog prideExportDialog, boolean modal, Reference reference, int rowIndex) {
        super(prideExportDialog, modal);
        this.prideExportDialog = prideExportDialog;
        this.rowIndex = rowIndex;
        initComponents();

        setTitle("Edit Reference");
        referenceJTextArea.setText(reference.getReference());
        pmidIDJTextField.setText(reference.getPmid());
        doiJTextField.setText(reference.getDoi());
        validateInput();

        setLocationRelativeTo(prideExportDialog);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        referenceDetailsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        referenceJTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        doiJTextField = new javax.swing.JTextField();
        pmidIDJTextField = new javax.swing.JTextField();
        okJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Reference");
        setResizable(false);

        referenceDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Reference"));

        jLabel1.setText("Reference");

        referenceJTextArea.setColumns(20);
        referenceJTextArea.setFont(referenceJTextArea.getFont());
        referenceJTextArea.setLineWrap(true);
        referenceJTextArea.setRows(3);
        referenceJTextArea.setWrapStyleWord(true);
        referenceJTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                referenceJTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(referenceJTextArea);

        jLabel2.setText("PMID");
        jLabel2.setToolTipText("PubMed ID");

        jLabel3.setText("DOI");
        jLabel3.setToolTipText("Digital Object Identifier");

        doiJTextField.setToolTipText("Digital Object Identifier");
        doiJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doiJTextFieldKeyReleased(evt);
            }
        });

        pmidIDJTextField.setToolTipText("PubMed ID");
        pmidIDJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pmidIDJTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout referenceDetailsPanelLayout = new javax.swing.GroupLayout(referenceDetailsPanel);
        referenceDetailsPanel.setLayout(referenceDetailsPanelLayout);
        referenceDetailsPanelLayout.setHorizontalGroup(
            referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(referenceDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(referenceDetailsPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(35, 35, 35))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, referenceDetailsPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                    .addGroup(referenceDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addComponent(pmidIDJTextField)
                    .addComponent(doiJTextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        referenceDetailsPanelLayout.setVerticalGroup(
            referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(referenceDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pmidIDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(referenceDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doiJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        okJButton.setText("OK");
        okJButton.setEnabled(false);
        okJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(referenceDetailsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(referenceDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Enables/disables the OK button.
     * 
     * @param evt 
     */
    private void referenceJTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_referenceJTextAreaKeyReleased
        if (referenceJTextArea.getText().length() > 0) {
            okJButton.setEnabled(true);
        } else {
            okJButton.setEnabled(false);
        }
    }//GEN-LAST:event_referenceJTextAreaKeyReleased

    /**
     * Enables/disables the OK button.
     * 
     * @param evt 
     */
    private void doiJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doiJTextFieldKeyReleased
        referenceJTextAreaKeyReleased(null);
    }//GEN-LAST:event_doiJTextFieldKeyReleased

    /**
     * Enables/disables the OK button.
     * 
     * @param evt 
     */
    private void pmidIDJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pmidIDJTextFieldKeyReleased
        referenceJTextAreaKeyReleased(null);
    }//GEN-LAST:event_pmidIDJTextFieldKeyReleased

    /**
     * Adds/updates the reference.
     * 
     * @param evt 
     */
    private void okJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okJButtonActionPerformed
        
        String tempPmid = null;
        String tempDoi = null;
        
        if (pmidIDJTextField.getText().length() > 0) {
            tempPmid = pmidIDJTextField.getText();
        }
        
        if (doiJTextField.getText().length() > 0) {
            tempDoi = doiJTextField.getText();
        }
        
        if (rowIndex != -1) {
            prideExportDialog.updateReference(new Reference(referenceJTextArea.getText(), tempPmid, tempDoi), rowIndex);
        } else {
            prideExportDialog.addReference(new Reference(referenceJTextArea.getText(), tempPmid, tempDoi));
        }
        
        dispose();  
    }//GEN-LAST:event_okJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField doiJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okJButton;
    private javax.swing.JTextField pmidIDJTextField;
    private javax.swing.JPanel referenceDetailsPanel;
    private javax.swing.JTextArea referenceJTextArea;
    // End of variables declaration//GEN-END:variables

    /**
     * Validate the input and enable/disable the OK button.
     */
    private void validateInput() {
        okJButton.setEnabled(referenceJTextArea.getText().length() > 0);
    }
}
