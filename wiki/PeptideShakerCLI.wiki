#summary How to use PeptideShaker from the command line
#labels Featured

=PeptideShaker Command Line Interface=

The PeptideShaker command line interface can be used to process identification files and output identification results in various formats.

There are four main sections to this page:

 * [#A)_PeptideShakerCLI A) PeptideShakerCLI] - data processing 
 * [#B)_ReportCLI B) ReportCLI] - identification results exports
 * [#C)_FollowUpCLI C) FollowUpCLI] - export for follow up analysis
 * [#D)_General D) General] - general command line help

All command line options have the same overall structure and only differ in the features and the parameters available.

----

==A) PeptideShakerCLI==

Available from PeptideShaker version 0.19.0.

*Standard command line:*

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.PeptideShakerCLI [parameters]
}}}

*Mandatory parameters:*

{{{
-experiment                Specifies the experiment name.

-sample                    Specifies the sample name.

-replicate                 The replicate number.

-spectrum_files            The spectrum files (mgf format) in a comma
                           separated list or an entire folder.
                           Example: "file1.mgf, file2.mgf".

-identification_files      The identification files (Mascot .dat,
                           OMSSA .omx and X!Tandem .t.xml formats) in
                           a comma separated list or an entire folder.
                           Example: "file1.omx, file1.dat, file1.t.xml".

-out                       PeptideShaker output file. If the file 
                           already exists it will be silently 
                           overwritten.

-search_params             The search parameters as a serialized
                           file of com.compomics.util.experiment.
                           identification.SearchParameters. This file 
                           is automatically saved by SearchGUI along 
                           with the identification files.
}}}

_Note that the search parameters are not strictly mandatory, as a default set of search parameters can be used. But in most case one will provide the search parameters as part of the command line._

*Optional gene annotation parameter:*

{{{
-species                   The species to use for the gene annotation, e.g., 'Homo sapiens'. 
                           Supported species are listed in the GUI. (v0.21.0 and newer.)

-species_type              The species type to use for the gene annotation, e.g., 'Vertebrates' or 'Plants'. 
                           Supported species types are listed in the GUI. (v0.22.4 and newer.)
}}}

*Optional output parameters:*

{{{
-out_txt_1                 Output folder for text summary - format 1 
                           (three files: proteins, peptides and psms).

-out_txt_2                 Output folder for text summary - format 2 
                           (one file: proteins and peptides). (Not
                           yet implemented.)

-out_pride                 PeptideShaker PRIDE XML output file. (Not
                           yet implemented.)
}}}

*Optional processing parameters:*

{{{
-protein_FDR               FDR at the protein level in percent 
                           (default 1% FDR: '1').

-peptide_FDR               FDR at the peptide level in percent 
                           (default 1% FDR: '1').

-psm_FDR                   FDR at the PSM level in percent (default 1%
                           FDR: '1').

-psm_FLR                   FLR at the PSM level in percent for 
                           peptides with different potential 
                           modification sites and one variable
                           modification (default 1% FLR: '1').

-a_score                   Calculate the A score (1: true, 0: false, 
                           default is '1').

-a_score_neutral_losses    Include neutral losses in A score (1: true,
                           0: false, default is '0').

-protein_fraction_mw_confidence     
                           Minimum confidence required for a protein in
                           the fraction MW plot (default 95%: '95.0').
}}}

*Optional filtering parameters:*

{{{
-min_peptide_length        Minimim peptide length filter (default is '6').

-max_peptide_length        Maximum peptide length filter (default is '30').

-max_mascot_e              Maximum Mascot E-value filter (default '100').

-max_omssa_e               Maximum OMSSA E-value filter (default '100').

-max_xtandem_e             Maximum X!Tandem E-value filter (default '100').

-max_precursor_error       Maximum precursor error filter (default '10'). 
                           See also max_precursor_error_type.

-max_precursor_error_type  Maximum precursor error type (0: ppm, 1: Da, default is '0'). 
                           See also max_precursor_error.

-exclude_unknown_ptms      Exclude unknown PTMs (1: true, 0: false, default is '1').
}}}

*PeptideShakerCLI Example:*

PeptideShakerCLI example where _X_, _Y_ and _Z_ have to be replaced by the actual version of PeptideShaker and _my folder_ by the folder containing the desired files:

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.PeptideShakerCLI 
-experiment myExperiment -sample mySample -replicate 1 
-identification_files "C:\my folder" -spectrum_files "C:\my folder" 
-search_params "C:\my folder\my_search_params.parameters" 
-out "C:\my folder\myCpsFile.cps"
}}}

_Note that for readability the command is here split over multiple lines. When used the command should of course be a single line._


----

==B) ReportCLI==

Available from PeptideShaker version 0.23.0.

*Standard command line:*

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.ReportCLI [parameters]
}}}

*Mandatory parameters:*

{{{
-in                        PeptideShaker project (.cps file)

-out                       Output folder for report files. (Existing files will be overwritten.)
}}}

*Optional report options:*

{{{
-reports                   Comma separated list of types of report to export. 
                           0: Certificate of Analysis, 
                           1: Default PSM Report, 
                           2: Default Peptide Report, 
                           3: Default Protein Report, 
                           4: Default Top Down Report, 
                           5: MassError

-documentation             Comma separated list of types of report documentation to export. 
                           0: Certificate of Analysis, 
                           1: Default PSM Report, 
                           2: Default Peptide Report, 
                           3: Default Protein Report, 
                           4: Default Top Down Report, 
                           5: MassError
}}}

*ReportCLI Example:*

ReportCLI example where _X_, _Y_ and _Z_ have to be replaced by the actual version of PeptideShaker:

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.ReportCLI -reports "0, 3"
}}}

----

==C) FollowUpCLI==

Available from PeptideShaker version 0.23.0.

*Standard command line:*

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.FollowUpCLI [parameters]
}}}

*Mandatory parameters:*

{{{
-in                        PeptideShaker project (.cps file)
}}}

*Optional recalibration parameters:*

{{{
-recalibration_folder      Output folder for the recalibrated files. (Existing files will be overwritten.)

-recalibration_mode        Recalibration type. 
                           0: precursor and fragment ions (default), 
                           1: precursor only, 
                           2: fragment ions only.
}}}

*Optional spectrum export parameters:*

{{{
-spectrum_folder           Output folder for the spectra. (Existing files will be overwritten.)

-psm_type                  Type of PSMs. 
                           0: Spectra of Non-Validated PSMs (default),  
                           1: Spectra of Non-Validated Peptides, 
                           2: Spectra of Non-Validated Proteins, 
                           3: Spectra of Validated PSMs, 
                           4: Spectra of Validated PSMs of Validated Peptides, 
                           5: Spectra of validated PSMs of Validated Peptides of Validated Proteins.
}}}

*Optional Progenesis export parameters:*

{{{
-progenesis_file           Output file for identification results in Progenesis LC-MS compatible format. 
                           (Existing files will be overwritten.)

-progenesis_type           Type of hits to export to Progenesis. 
                           0: Spectra of Validated PSMs of Validated Peptides of Validated Proteins.
                           1: Spectra of Validated PSMs of Validated Peptides, 
                           2: Spectra of validated PSMs.
}}}

*Optional protein accessions export parameters:*

{{{
-accessions_file           Output file to export the protein accessions in text format. 
                           (Existing files will be overwritten.)

-accessions_type           When exporting accessions, select a category of proteins. 
                           0: Main Accession of Validated Protein Groups (default),
                           1: All Accessions of Validated Protein Groups, 
                           2: Non-Validated Accessions.
}}}

*Optional FASTA export parameters:*

{{{
-fasta_file                File where to export the protein details in fasta format. 
                           (Existing files will be overwritten.)

-fasta_type                When exporting protein details, select a category of proteins. 
                           0: Main Accession of Validated Protein Groups (default), 
                           1: All Accessions of Validated Protein Groups, 
                           2: Non-Validated Accessions.
}}}

*Optional PepNovo+ training file export parameters:*

{{{
-pepnovo_training_folder   Output folder for PepNovo training files. (Existing files will be overwritten.)

-pepnovo_training_recalibration
                           Indicate whether the exported mgf files shall be recalibrated. 
                           0: No, 1: Yes (default).

-pepnovo_training_fdr      FDR used for the 'good spectra' export. If not set, the validation FDR will be used.

-pepnovo_training_fnr      FNR used for the 'bad spectra' export. If not set, the same value as for 
                           the 'good spectra' FDR will be used.
}}}

*Optional inclusion list generation parameters:*

{{{
-inclusion_list_file       Output file for an inclusion list of validated hits. 
                           (Existing files will be overwritten.)

-inclusion_list_format     Format for the inclusion list. 
                           0: Thermo (default), 
                           1: ABI, 
                           2: Bruker, 
                           3: MassLynx.

-inclusion_list_peptide_filters     
                           Peptide filters to be used for the inclusion list export (comma separated). 
                           0: Miscleaved Peptides, 
                           1: Reactive Peptides, 
                           2: Degenerated Peptides.

-inclusion_list_protein_filters     
                           Protein inference filters to be used for the inclusion list export (comma separated). 
                           1: Related Proteins, 
                           2: Related and Unrelated Proteins, 
                           3: Unrelated Proteins.

-inclusion_list_rt_window  Retention time window for the inclusion list export (in seconds).
}}}

*FollowUpCLI Example:*

FollowUpCLI example where _X_, _Y_ and _Z_ have to be replaced by the actual version of PeptideShaker and _my folder_ by the folder containing the desired files:

{{{
java -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.FollowUpCLI -spectrum_folder "C:\my folder" -psm_type 0
}}}

----


==General==

*Comma Separated Lists*

When using comma separated lists as input please pay attention to the quotes required. Surround the full content of the option in quotes and not the individual items:

{{{
-spectrum_files "C:\..\file_1.mgf, C:\..\file_2.mgf"
}}}


*Memory Settings*

Remember that big datasets require more than the default memory provided to the Java virtual machine, so for larger dataset please increase the maximum memory setting. Example, for a maximum of 2GB of memory:

{{{
java -Xmx2048M -cp PeptideShaker-X.Y.Z.jar eu.isas.peptideshaker.cmd.PeptideShakerCLI [parameters]
}}}

See also: [http://code.google.com/p/compomics-utilities/wiki/JavaTroubleShooting JavaTroubleShooting].


*Opening PeptideShaker Projects*

To open a PeptideShaker project (a cps file) from the command line (for display in PetpideShaker) use the following command:

{{{
java -jar PeptideShaker-X.Y.Z.jar -cps "C:\my folder\myCpsFile.cps"
}}}


*Help*

If you experience any problems with the command line or have any suggestion please contact us via the [https://groups.google.com/group/peptide-shaker PeptideShaker mailing list] or set up an issue using the [http://code.google.com/p/peptide-shaker/issues/list issue tracking system].