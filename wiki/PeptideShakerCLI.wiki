#instructions to use PeptideShaker from CommandLine or from other Java applications

=PeptideShaker Command Line Interface=

The PeptideShaker command line tool takes a SearchGUI result folder, performs the X!Tandem/OMSSA integrated FDR calculations, and subsequently generates PSM, peptide and protein an output files.


To make use of *PeptideShakerCLI* from the command line use the following command:

{{{
java -cp PeptideShaker-X.Y.Z eu.isas.peptideshaker.cmd.PeptideShakerCLI [options and input]

   available options and inputs:

Options:
-ascore             Include ascore to estimate the probability of phospho sites
-out                PeptideShaker output folder
-pep                FDR at PEPTIDE level (default 1% FDR: <1>)
-prot               FDR at PROTEIN level (default 1% FDR: <1>)
-psm                FDR at PSM level (default 1% FDR: <1>)
-search_gui_results SearchGUI result folder

}}}
 
To show the usage description in the command line, start PeptideShakerCLI without parameters.

An example command line:
{{{
java -cp PeptideShaker-X.Y.Z eu.isas.peptideshaker.cmd.PeptideShakerCLI -search_gui_results ~/tmp/searchgui_result_folder_projectA/ -out ~/tmp/peptidshaker_projectA/  -pep 1 -prot 1 -psm 1 -ascore

}}}

This will start *PeptideShaker* and import the X!Tandem, OMSSA and/or Mascot results files in the specified SearchGUI output folder. After importing and integrating the identification files, the PSMs/Peptides/Proteins will be validated to a resulting 1% FDR. 

=PeptideShaker API=

Other applications can also make use of the PeptideShaker API by creating PeptideShakerCLI instances. To make such an instance, you first need to fill a dedicated Java Bean (PeptideShakerCLIInputBean) with the required parameters.


{{{
PeptideShakerCLIInputBean:

// Accepted PSM FDR
private double iPSMFDR = 1.0;

// Accepted Peptide sequence FDR
private double iPeptideFDR = 1.0;

// Accepted Protein FDR
private double iProteinFDR = 1.0;

// Include estimation of AScore
private boolean boolAScore = false;

// SearchGUI input folder
private File iInput = null;

// PeptideShaker output folder
private File iOutput = null;

// Taskname which will be used to name the experiment
private String iExperimentID = "peptideshaker_cli_exp_default";

// Taskname which will be used to name the sample
private String iSampleID = "peptideshaker_cli_sample_default";
}}}

Using one such Bean will, you can create a Callable PeptideShakerCLI instance which will start *PeptideShaker* and import the X!Tandem, OMSSA and/or Mascot results files in the specified SearchGUI output folder. After importing and integrating the identification files, the PSMs/Peptides/Proteins will be validated to a resulting 1% FDR. 


 